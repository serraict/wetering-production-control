name: Package Base Image

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag for the base image (e.g., latest, v1.0)'
        required: true
        default: 'latest'
        type: string
  push:
    branches: [ "main" ]
    paths:
      - 'uv.lock'
      - 'pyproject.toml'
      - 'Dockerfile.base'

env:
  REGISTRY: ghcr.io
  BASE_IMAGE_NAME: ${{ github.repository }}-base

permissions:
  contents: read
  packages: write
  attestations: write
  id-token: write

jobs:
  build-base:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history for all branches and tags

    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
      with:
        images: ${{ env.REGISTRY }}/${{ env.BASE_IMAGE_NAME }}
        tags: |
          type=raw,value=${{ inputs.tag || 'latest' }}
          type=sha,prefix={{branch}}-,enable=${{ github.event_name == 'push' }}

    - name: Build and push base Docker image
      id: push
      uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
      with:
        context: .
        file: ./Dockerfile.base
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Generate artifact attestation
      uses: actions/attest-build-provenance@v1
      with:
        subject-name: ${{ env.REGISTRY }}/${{ env.BASE_IMAGE_NAME }}
        subject-digest: ${{ steps.push.outputs.digest }}
        push-to-registry: true

    - name: Comment on automatic rebuild
      if: github.event_name == 'push'
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.repos.createCommitComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            commit_sha: context.sha,
            body: `üê≥ **Base image automatically rebuilt** due to dependency changes.\n\n**New base image:** \`${{ env.REGISTRY }}/${{ env.BASE_IMAGE_NAME }}:latest\`\n\n**Trigger:** Changes detected in: \`uv.lock\`, \`pyproject.toml\`, or \`Dockerfile.base\``
          })
